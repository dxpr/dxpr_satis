name: CI/CD

on:
  push:


env:
  RSA_PRIVATE_KEY_BASE64: ${{ secrets.RSA_PRIVATE_KEY_BASE64 }}
  RSA_PUBLIC_KEY_BASE64: ${{ secrets.RSA_PUBLIC_KEY_BASE64 }}
  GH_PAT: ${{ secrets.GH_PAT }}

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up
      run: |
        # ssh keys setup
        mkdir -p .ssh
        echo "$RSA_PRIVATE_KEY_BASE64" | base64 --decode > .ssh/repository_rsa
        chmod 400 .ssh/repository_rsa
        echo "$RSA_PUBLIC_KEY_BASE64" | base64 --decode > .ssh/repository_rsa.pub
        docker-compose run build bash -c "ssh -oStrictHostKeyChecking=accept-new -T -ai ~/.ssh/repository_rsa git@github.com" || true
        # GH_PAT setup
        echo "rm -rf .composer" && rm -rf .composer
        echo "mkdir -p .composer" && mkdir -p .composer
        cat <<EOF >.composer/auth.json
        {
          "github-oauth": {
              "github.com": "$GH_PAT"
          }
        }
        EOF
        echo ".composer/auth.json is created"
      if: env.RSA_PRIVATE_KEY_BASE64 != '' && env.RSA_PUBLIC_KEY_BASE64 != '' && env.GH_PAT != ''

    - name: Build
      run: |
        docker-compose up --exit-code-from build --timeout 1000 build
      if: env.RSA_PRIVATE_KEY_BASE64 != '' && env.RSA_PUBLIC_KEY_BASE64 != '' && env.GH_PAT != ''

